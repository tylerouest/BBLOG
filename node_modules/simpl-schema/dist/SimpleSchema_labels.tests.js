"use strict";

var _SimpleSchema = require("./SimpleSchema");

var _expect = _interopRequireDefault(require("expect"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/* eslint-disable func-names, prefer-arrow-callback */
describe('SimpleSchema - label', function () {
  it('inflection', function () {
    var schema = new _SimpleSchema.SimpleSchema({
      minMaxNumber: {
        type: _SimpleSchema.SimpleSchema.Integer
      },
      obj: {
        type: Object
      },
      'obj.someString': {
        type: String
      }
    });
    (0, _expect["default"])(schema.label('minMaxNumber')).toEqual('Min max number');
    (0, _expect["default"])(schema.label('obj.someString')).toEqual('Some string');
  });
  it('dynamic', function () {
    var schema = new _SimpleSchema.SimpleSchema({
      minMaxNumber: {
        type: _SimpleSchema.SimpleSchema.Integer
      },
      obj: {
        type: Object
      },
      'obj.someString': {
        type: String
      }
    });
    (0, _expect["default"])(schema.label('obj.someString')).toEqual('Some string');
    schema.labels({
      'obj.someString': 'A different label'
    });
    (0, _expect["default"])(schema.label('obj.someString')).toEqual('A different label');
  });
  it('callback', function () {
    var schema = new _SimpleSchema.SimpleSchema({
      minMaxNumber: {
        type: _SimpleSchema.SimpleSchema.Integer
      },
      obj: {
        type: Object
      },
      'obj.someString': {
        type: String
      }
    });
    (0, _expect["default"])(schema.label('obj.someString')).toEqual('Some string');
    schema.labels({
      'obj.someString': function objSomeString() {
        return 'A callback label';
      }
    });
    (0, _expect["default"])(schema.label('obj.someString')).toEqual('A callback label');
  });
  it('should allow apostrophes ("\'") in labels', function () {
    var schema = new _SimpleSchema.SimpleSchema({
      foo: {
        type: String,
        label: 'Manager/supervisor\'s name'
      }
    });
    (0, _expect["default"])(schema.label('foo')).toEqual('Manager/supervisor\'s name');
  });
});